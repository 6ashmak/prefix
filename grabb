$curl = curl_init(); 
curl_setopt($curl, CURLOPT_URL, '[xfvalue_autoparsermangapoisklink]');
curl_setopt($curl, CURLOPT_HEADER, 0);
curl_setopt($curl, CURLOPT_USERAGENT,'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.57 Safari/537.17');
curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);
curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 60);
curl_setopt($curl, CURLOPT_REFERER,'https://mangapoisk.com');
curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false);

require_once 'simple_html_dom.php';
// поисковый URL
$url = curl_exec($curl);
// загружаем данный URL

// получение информации о запросе чтобы проверить не отдаёт ли ссылка 404
$info = curl_getinfo($curl);
// проверка статуса ответа
if ($info['http_code'] == 404) {
    // запись данных в файл в случае есил ответ 404
    $data = "Link: [xfvalue_autoparsermangapoisklink]\nStatus: 404\n";
    file_put_contents('autoparserrun/linkserror/linkserror.txt', $data, FILE_APPEND);
}

$data = str_get_html($url);
// очищаем страницу от лишних данных, это не обязательно, но когда HTML сильно захламлен бывает удобно почистить его, для дальнейшего анализа
foreach($data->find('script,link,comment') as $tmp)$tmp->outertext = '';

// Находим все элементы span с классом chapter-title
$chapter_titles = $data->find('span.chapter-title');

// Ищем первый span с текстом, содержащим цифру 21 в нашем случае эта цифра содержится в $mytext который получает цифру последней главы с моего сайта в парсере выше
// Чтобы найти только целое число 1 после слова "Глава" в каждом элементе span, но не находить числа 15 или 130, можно изменить условие внутри цикла foreach. Вместо проверки наличия числа 1 в массиве подстрок, можно проверить, что слово "Глава" находится в массиве подстрок и следующая за ним подстрока - это именно число 1, а не 15 или 130.
// Этот код будет искать только целое число 1 после слова "Глава" в каждом элементе span, но не находить числа 15 или 130 и так далее.
$first_span = null;
foreach ($chapter_titles as $chapter_title) {
    $words = explode(' ', $chapter_title->plaintext);
    $index = array_search('Глава', $words);
    if ($index !== false && isset($words[$index+1]) && $words[$index+1] === $mytext) {
        $first_span = $chapter_title;
        break;
    }
}

// Если первый span найден, ищем следующий span с цифрой больше, но наименьший по возрастанию к первоначальному числу
if ($first_span !== null) {
    $next_span = null;
    $first_number = floatval(preg_replace('/[^0-9\.]/', '', $first_span->plaintext));
    foreach ($chapter_titles as $chapter_title) {
        $number = floatval(preg_replace('/[^0-9\.]/', '', $chapter_title->plaintext));
        if ($number > $first_number && ($next_span === null || $number < floatval(preg_replace('/[^0-9\.]/', '', $next_span->plaintext)))) {
            $next_span = $chapter_title;
        }
    }

    // Если следующий span найден, получаем url родительского тега <a> и запускаем добавление новости в MySql
    if ($next_span !== null) {
        $parent_a = $next_span->parent();
        if ($parent_a !== null && $parent_a->tag === 'a') {
            $urlMangapoiskChapterSearch = ''.$parent_a->href.'';
            $urlMangapoiskChapter = 'https://mangapoisk.com'.$urlMangapoiskChapterSearch.'';

// выполнить код, если $urlMangapoiskChapterSearch не пустой
if (!empty($urlMangapoiskChapterSearch)) {

// В этом примере мы используем функцию `preg_match_all()`, чтобы найти все числа в строке. Регулярное выражение `/\d+/` соответствует любой последовательности цифр. Результат сохраняется в массиве `$matches`, и мы выводим первое и второе число, используя индексы `[0][0]` и `[0][1]` соответственно.
// Чтобы получить значение `$glava` в формате `58.2` из строки `$next_span = "Том 2 Глава 58.2 ";`, вам нужно изменить регулярное выражение, чтобы оно также находило десятичную часть числа. Вот как это можно сделать:
preg_match_all('/\d+(\.\d+)?/', $next_span, $matches);
[xfgiven_autoparsermangapoisktom]$tom = "[xfvalue_autoparsermangapoisktom]"; // выводит "2"[/xfgiven_autoparsermangapoisktom]
[xfnotgiven_autoparsermangapoisktom]$tom = $matches[0][0]; // выводит "2"[/xfnotgiven_autoparsermangapoisktom]
$glava = $matches[0][1]; // выводит "58.2"


// Находим все элементы span на странице
$status_spans = $data->find('span');
// Проходим по каждому элементу span и проверяем его текстовое содержимое на наличие слова "Статус"
foreach ($status_spans as $status_span) {
    if (strpos($status_span->plaintext, 'Статус') !== false) {
        // Найден элемент span со словом "Статус"
$status_text = trim(str_replace('Статус:', '', $status_span));
    }
}

// Подключение к базе данных
$servername = "localhost";
$username = "";
$password = "";
$dbname = "";

$conn = mysqli_connect($servername, $username, $password, $dbname);

// Установка кодировки
mysqli_set_charset($conn, "utf8");

// Проверка соединения
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

$Runame = $RUStitlemanga;
$Runame = addslashes($Runame); // Функция `addslashes()` добавляет обратный слеш "\" перед символами одинарной кавычки, двойной кавычки, обратного слеша и нулевым байтом. В данном случае, после выполнения кода, значение переменной `$Runame` будет равно "Скрытое в \'тени", где символ одинарной кавычки экранирован обратным слешем.
$Runame = str_replace("&#039;", "\'", $Runame); // В случае если в коде вместо ковычки используется &#039;
$Parsermangapoisk = $urlMangapoiskChapter;
$Tommanga = $tom;
$Glavamanga = $glava;
$RunameSql = 'runame|'.$Runame.'||';
$FastnavigationSql = "fastnavigation|{news-id}||";
$AgeSql = ''.$AgeMangaSQL.'';
$ParsermangapoiskSql = 'parsermangapoisk-v2|'.$Parsermangapoisk.'||';
$TommangaSql = 'tommanga|'.$Tommanga.'||';
$GlavamangaSql = 'glavamanga|'.$Glavamanga.'||';

// Запрос для добавления новости
$autor = "Kaisa";
$date = date("Y-m-d H:i:s");
$short_story = "";
$full_story = "";
$xfields = 'comicsormanga|Manga||'.$RunameSql.''.$FastnavigationSql.''.$AgeSql.''.$ParsermangapoiskSql.''.$TommangaSql.''.$GlavamangaSql.'';
$title = "{title}";
$title = stripslashes($title); // В случае если в коде уже есть экранирование "\", то убриает его
$title = addslashes($title); // Функция `addslashes()` добавляет обратный слеш "\" перед символами одинарной кавычки, двойной кавычки, обратного слеша и нулевым байтом. В данном случае, после выполнения кода, значение переменной `$Runame` будет равно "Скрытое в \'тени", где символ одинарной кавычки экранирован обратным слешем.
$title = str_replace("&#039;", "\'", $title); // В случае если в коде вместо ковычки используется &#039;
$descr = "";
$keywords = "";
$category = "12"; // ID категории новости
$alt_name = "{title}";
$alt_name = strtolower($alt_name); // преобразование в нижний регистр
$alt_name = str_replace("'", "", $alt_name); // удаление символа '
$alt_name = str_replace("&#039;", "", $alt_name); // удаление символа ' но в случае если в коде вместо ковычки используется &#039;
$alt_name = str_replace(' ', '-', $alt_name); // замена пробелов на символ "-"
$alt_name = str_replace("?", "", $alt_name); // удаление символа ?
$comm_num  = "0";
$allow_comm = "1"; // Разрешить комментарии
$allow_main = "0";  
$approve = "1"; // Одобрить новость
$fixed = "0"; // Не закреплять новость
$allow_br = "0";
$symbol = "";
$tags = "";
$metatitle = "";

$allow_rate = "1"; // Разрешить рейтинг
$rating = "0"; // Значение рейтинга
$user_id = "38512"; // Id юзера

// Проверяем, есть ли уже такая запись в таблице
// Этот запрос вернет количество строк, в которых значение поля xfields равно $xfieldscheck. Если результат будет больше 0, значит, в таблице уже есть точно такое же значение, и запрос на вставку новой записи не нужно выполнять.
$sql_check = "SELECT COUNT(*) FROM dle_post WHERE xfields = '$xfields'";
$result = mysqli_query($conn, $sql_check);
$row = mysqli_fetch_array($result);
if ($row[0] == 0) {
// Если такой записи нет, выполняем запрос на вставку новой записи

// SQL запрос для вставки записи в dle_post
$sql_post = "INSERT INTO dle_post (autor, date, short_story, full_story, xfields, title, descr, keywords, category, alt_name, comm_num, allow_comm, allow_main, approve, fixed, allow_br, symbol, tags, metatitle) VALUES ('$autor', '$date', '$short_story', '$full_story', '$xfields', '$title', '$descr', '$keywords', '$category', '$alt_name', '$comm_num', '$allow_comm', '$allow_main', '$approve', '$fixed', '$allow_br', '$symbol', '$tags', '$metatitle')";

// Выполнение запроса для вставки записи в dle_post
if (mysqli_query($conn, $sql_post)) {
    // Получение id только что созданной записи в dle_post
    $post_id = mysqli_insert_id($conn);
 // SQL запрос для вставки записи в dle_post_extras
    $sql_extras = "INSERT INTO dle_post_extras (news_id, allow_rate, rating, user_id) VALUES ('$post_id', '$allow_rate', '$rating', '$user_id')";
    // Выполнение запроса для вставки записи в dle_post_extras
    if (mysqli_query($conn, $sql_extras)) {
        // SQL запрос для вставки записи в dle_post_extras_cats
        $sql_extras_cats = "INSERT INTO dle_post_extras_cats (news_id, cat_id) VALUES ('$post_id', '12')";
        // Выполнение запроса для вставки записи в dle_post_extras_cats
        if (mysqli_query($conn, $sql_extras_cats)) {
           // Новость успешно создана, делаем записть newchapter ok чтобы использовать далее в коде
           $newchapter = "ok";
        } else {
                 $error_message = "Ошибка: " . $sql_extras_cats . "<br>" . mysqli_error($conn) . "\n";
            // Запись ошибки в файл txt
            $file = fopen("autoparser_mysql_error_log.txt", "a");
            fwrite($file, $error_message);
            fclose($file);
        }
    } else {
            $error_message = "Ошибка: " . $sql_extras . "<br>" . mysqli_error($conn) . "\n";
        // Запись ошибки в файл txt
        $file = fopen("autoparser_mysql_error_log.txt", "a");
        fwrite($file, $error_message);
        fclose($file);
    }
} else {
        $error_message = "Ошибка: " . $sql_post . "<br>" . mysqli_error($conn) . "\n";
    // Запись ошибки в файл txt
    $file = fopen("autoparser_mysql_error_log.txt", "a");
    fwrite($file, $error_message);
    fclose($file);
}

// ID новости, которую нужно обновить
$news_id = {news-id};
// Новая дата публикации в формате "ГГГГ-ММ-ДД ЧЧ:ММ:СС"
$new_date = date("Y-m-d H:i:s");
// SQL-запрос для обновления даты публикации новости
$sql = "UPDATE dle_post SET date = '$new_date' WHERE id = $news_id";
// Выполняем SQL-запрос
if (mysqli_query($conn, $sql)) {
    // Дата публикации новости успешно обновлена
} else {
    $error_message = "Ошибка при обновлении даты публикации новости: " . $sql_post . "<br>" . mysqli_error($conn) . "\n";
    // Запись ошибки в файл txt
    $file = fopen("autoparser_mysql_error_log.txt", "a");
    fwrite($file, $error_message);
    fclose($file);
}

// Заменяем статус в допполе СтатусМангапоиск на Завершенеа в случае если на мангапоиска статус Завершена
// Проверка значения переменной $status_text
if ($status_text == "Завершена") {
    // Выполнение определенных действий
    // ...

// Проверяем, существует ли значение в столбце
$sql_check = "SELECT * FROM dle_post WHERE id = {news-id} AND xfields LIKE '%autoparsermangapoiskstatus|Завершена%'";
$result_check = mysqli_query($conn, $sql_check);

if (mysqli_num_rows($result_check) > 0) {
    // Значение Завершена существует, ничего не делаем
} else {
    // Значение Завершена не существует, заменить autoparsermangapoiskstatus|Выпускается на autoparsermangapoiskstatus|Завершена
    $sql_update_status = "UPDATE dle_post SET xfields = REPLACE(xfields, 'autoparsermangapoiskstatus|Выпускается', 'autoparsermangapoiskstatus|Завершена') WHERE id = {news-id}";
    if (mysqli_query($conn, $sql_update_status)) {
        // Статус упешно обновлён
    } else {
    $error_message = "Ошибка при обновлении статуса: " . mysqli_error($conn) . "\n";
    // Запись ошибки в файл txt
    $file = fopen("autoparser_mysql_error_log.txt", "a");
    fwrite($file, $error_message);
    fclose($file);
    }
}

} // КОНЕЦ Заменяем статус в допполе СтатусМангапоиск на Завершенеа в случае если на мангапоиска статус Завершена

} // КОНЕЦ Проверка наличия значений xfields в таблице

// Закрытие соединения
mysqli_close($conn);

} // КОНЕЦ выполнить код, если $urlMangapoiskChapter не пустой

        }
    }
}

$data->clear();// подчищаем за собой
unset($data);

curl_close($curl);
